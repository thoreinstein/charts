nameOverride: ""
fullnameOverride: ""
replicaCount: 1
persistence:
  application:
    enabled: true
    # accessModes:
    #  - ReadWriteOnce
    #  - ReadWriteMany
    accessModes: [ReadWriteOnce] # Supported modes: ReadWriteOnce, ReadWriteMany, ReadOnlyMany
    size: 1Gi # Size of the PVC
    # storageClassName: "" # Optional: Specify a storage class, or "" for chart default, or "-" for Kubernetes default.
    # existingClaim: "" # Optional: Specify an existing PVC to use. If used, size and storageClassName are ignored.
  meilisearch:
    enabled: true
    accessModes: [ReadWriteOnce] # Supported modes: ReadWriteOnce (typically)
    size: 1Gi # Size of the PVC for Meilisearch
    # storageClassName: "" # Optional: Specify a storage class
    # existingClaim: "" # Optional: Specify an existing PVC to use for Meilisearch

# Chrome settings
chrome:
  replicaCount: 1
  securityContext:
    # WARNING: Running Chrome in privileged mode is required for some environments to work headless,
    # but it reduces container isolation and should be used with caution.
    # Understand the security implications before enabling this in production.
    privileged: true
# Meilisearch settings
meilisearch:
  replicaCount: 1
  # IMPORTANT: The Meilisearch masterKey MUST be set and stored in a Kubernetes secret.
  # The chart expects a secret named '{{ include "karakeep.fullname" . }}' (e.g., 'myrelease-karakeep')
  # with a key 'meili-master-key' containing the actual master key.
  # If this value in values.yaml is empty, the chart assumes the key exists in the secret.
  # For production, generate a strong random key and pre-populate the secret.
  masterKey: "" # This field is illustrative; actual key comes from secret '{{ include "karakeep.fullname" . }}' key 'meili-master-key'.
  env:
    noAnalytics: true
image:
  repository: ghcr.io/karakeep-app/karakeep
  pullPolicy: IfNotPresent
  tag: latest # Specify a tag when deploying
chromeImage:
  repository: gcr.io/zenika-hub/alpine-chrome
  pullPolicy: IfNotPresent
  tag: "123"
meilisearchImage:
  repository: getmeili/meilisearch
  pullPolicy: IfNotPresent
  tag: v1.13.3
serviceAccount:
  create: true
  annotations: {}
  name: ""
service:
  type: ClusterIP
  port: 80
  # Optional: Customize service annotations if needed
  annotations: {}
# Service configurations
services:
  chrome:
    url: http://karakeep-chrome:9222
  meilisearch:
    url: http://karakeep-meilisearch:7700
ingress:
  enabled: false
  className: nginx # "" by default, let user specify or rely on cluster default
  annotations:
    # Default to redirecting to SSL if ingress is enabled and TLS is used.
    # Consider your reverse proxy or ingress controller's specific annotations.
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # Changed from "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "0" # Allow large file uploads if necessary for karakeep
    # cert-manager.io/cluster-issuer: "letsencrypt-prod" # Example: uncomment and set if using cert-manager with TLS
    # external-dns.alpha.kubernetes.io/hostname: "" # Example: if you want external-dns to manage this specific hostname
  # Domain from common values - this will be used if overrideHost is not set
  domain: "" # e.g., "example.com"
  # overrideHost: "" # e.g., "karakeep.example.com" or just "karakeep" if domain is set globally
  # Host is managed by common.domain_name helper: {{ include "common.domain_name" (dict "name" (default .Chart.Name .Values.ingress.overrideHost) "domain" .Values.ingress.domain) }}
  tls: false # Set to true to enable TLS. Secret must be provided or managed by cert-manager
    # secretName: "" # If not using cert-manager, specify the secret name for TLS certificates, e.g. karakeep-tls
    # If using cert-manager, it will typically create the secret based on the host.
# Cloudflare configuration
cloudflare:
  # Enable Cloudflare DNS integration - set to true to use Cloudflare tunnels
  enabled: false
  # tunnelId comes from common.yaml
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi
chromeResources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi
meilisearchResources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 512Mi
# Environment variables
env:
  DATA_DIR: /data
  DISABLE_SIGNUPS: "true"
# Optional: Configure additional environment variables
extraEnv: []
# Set timezone
timezone: UTC
