apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mealie.fullname" . }}
  labels:
    {{- include "mealie.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mealie.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mealie.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mealie.serviceAccountName" . }}
      {{- if .Values.hostAliases }}
      hostAliases:
      {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-postgres
          image: postgres:15-alpine
          command:
            - "/bin/sh"
            - "-c"
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
                echo "PostgreSQL is not ready yet..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
          env:
            - name: POSTGRES_HOST
              value: {{ include "mealie.fullname" . }}-postgres-rw
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" . }}-postgres-app
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" . }}-postgres-app
                  key: password
      containers:
        - name: {{ include "mealie.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "mealie.fullname" . }}
            {{- if .Values.oidc.enabled }}
            - secretRef:
                name: {{ include "mealie.fullname" }}-oidc
            {{- end }}
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            - name: PUID
              value: "{{ .Values.env.PUID }}"
            - name: PGID
              value: "{{ .Values.env.PGID }}"
            {{- if .Values.env.baseURL }}
            - name: BASE_URL
              value: {{ .Values.env.baseURL | quote }}
            {{- else if and .Values.ingress.enabled .Values.ingress.domain }}
            - name: BASE_URL
              value: "http{{ if .Values.ingress.tls }}s{{ end }}://{{ include "common.domain_name" (dict "name" (include "mealie.name" .) "domain" .Values.ingress.domain) }}"
            {{- end }}
            - name: DB_ENGINE
              value: "postgres"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" .}}-postgres-app
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" .}}-postgres-app
                  key: password
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" .}}-postgres-app
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" .}}-postgres-app
                  key: port
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "mealie.fullname" .}}-postgres-app
                  key: dbname
            - name: ALLOW_SIGNUP
              value: "{{ .Values.env.allowSignup }}"
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "mealie.fullname" . }}-data-pvc
