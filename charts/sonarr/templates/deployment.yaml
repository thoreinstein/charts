---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.fullname" . }}
  labels:
    {{- include "sonarr.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sonarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sonarr.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "sonarr.serviceAccountName" . }}
      securityContext:
        fsGroup: 100
      initContainers:
        - name: volume-permissions
          image: busybox:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              chown -R 99:100 /config && chmod -R 755 /config
          volumeMounts:
            - name: config
              mountPath: /config
        - name: {{ .Chart.Name }}-init
          image: busybox:latest
          command: 
            - "/bin/sh"
            - "-c"
            - |
              cat /tmp/config/config.xml.template | \
              sed "s/\${POSTGRES_HOST}/$POSTGRES_HOST/g" | \
              sed "s/\${POSTGRES_PORT}/$POSTGRES_PORT/g" | \
              sed "s/\${POSTGRES_USER}/$POSTGRES_USER/g" | \
              sed "s/\${POSTGRES_PASSWORD}/$POSTGRES_PASSWORD/g" | \
              sed "s/\${API_KEY}/$API_KEY/g" > /config/config.xml && \
              chmod 644 /config/config.xml
          env:
            - name: POSTGRES_HOST
              value: "{{ include "sonarr.fullname" . }}-rw"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}-db-credentials
                  key: password
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "sonarr.fullname" . }}-api-key
                  key: api-key
          volumeMounts:
            - name: config-init
              mountPath: /tmp/config
            - name: config
              mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "99"
            - name: PGID
              value: "100"
            - name: UMASK
              value: "022"
            - name: TZ
              value: America/New_York
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: media
              mountPath: /media
            - name: config
              mountPath: /config
            - name: backups
              mountPath: /backups
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: {{ include "sonarr.name" . }}-media-pvc
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "sonarr.name" . }}-config-pvc
        - name: backups
          persistentVolumeClaim:
            claimName: {{ include "sonarr.name" . }}-backups-pvc
        - name: config-init
          configMap:
            name: {{ include "sonarr.fullname" . }}
